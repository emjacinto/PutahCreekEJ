library(mapview)
library(here)
library(dplyr)
library(raster)
library(viridisLite)
library(viridis)
library(ggplot2)
library(mapview)
library(sf)
library(USAboundaries)
library(GSODR)
library(rnaturalearth)
# dataframe with locations
dat.sites <- data.frame(y = c(38.494, 38.526, 38.537, 38.527, 38.517, 38.518),
# latitude
x = c(-122.002, -121.953, -121.85, -121.803, -121.755, -121.696),                                  #longitude
Type= c("Site A","Site B","Site C","Site D", "Site E", "Site F"))
# check data points look right; 'color' in aesthetics argument below is the grouping variable you want to define the point colors
ggplot(data=dat.sites, aes(x=x, y=y)) +
geom_point(size=4)
# coordinates of map
mean.x = mean(dat.sites$x)
mean.y = mean(dat.sites$y)
left = min(dat.sites$x - 0.005)
right = max(dat.sites$x + 0.005)
top = max(dat.sites$y + 0.005)
bottom = min(dat.sites$y - 0.005)
Putah_Map <- st_as_sf(x = dat.sites,
coords = c("x","y"),
crs = "+proj=longlat +datum=WGS84")
ca <- USAboundaries::us_states(resolution = "high", states= "CA")
install.packages("USAboundariesData")
ca <- USAboundaries::us_states(resolution = "high", states= "CA")
library(USAboundariesData)
install.packages("USAboundariesData", repos = "http://packages.ropensci.org", type = "source")
install.packages("USAboundariesData", repos = "http://packages.ropensci.org", type = "source")
ca <- USAboundaries::us_states(resolution = "high", states= "CA")
Putah_Map2 <- ggplot() +
geom_sf(data = Putah_Map, color = "grey50", fill = "mediumpurple4", alpha=0.6) +
theme(axis.text.y = element_text(angle = 90, hjust = 0.5)) +
theme_bw() +
xlab("Longitude") +
ylab("Latitude")+
coord_sf() +
theme(plot.background = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(0, 0, 0 ,0), "mm"))
View(Putah_Map2)
View(Putah_Map2)
View(Putah_Map2)
Putah_Map2 <- ggplot(Putah_Map) +
geom_sf(data = Putah_Map, color = "grey50", fill = "mediumpurple4", alpha=0.6) +
theme(axis.text.y = element_text(angle = 90, hjust = 0.5)) +
theme_bw() +
xlab("Longitude") +
ylab("Latitude")+
coord_sf() +
theme(plot.background = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(0, 0, 0 ,0), "mm"))
Putah_Map2 <- ggplot(Putah_Map) +
geom_sf(data = Putah_Map, color = "grey50", fill = "mediumpurple4", alpha=0.6) +
theme(axis.text.y = element_text(angle = 90, hjust = 0.5)) +
theme_bw() +
xlab("Longitude") +
ylab("Latitude")+
coord_sf() +
theme(plot.background = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(0, 0, 0 ,0), "mm"))
Putah_Map2 <- ggplot() +
geom_sf(data = dat.sites, color = "grey50", fill = "mediumpurple4", alpha=0.6) +
theme(axis.text.y = element_text(angle = 90, hjust = 0.5)) +
theme_bw() +
xlab("Longitude") +
ylab("Latitude")+
coord_sf() +
theme(plot.background = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(0, 0, 0 ,0), "mm"))
Putah_Map2
Putah_Map2 <- ggplot(Putah_Map) +
geom_sf(data = dat.sites, color = "grey50", fill = "mediumpurple4", alpha=0.6) +
theme(axis.text.y = element_text(angle = 90, hjust = 0.5)) +
theme_bw() +
xlab("Longitude") +
ylab("Latitude")+
coord_sf() +
theme(plot.background = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(0, 0, 0 ,0), "mm"))
`rlang::last_error()`
Putah_Map2 <- ggplot(Putah_Map) +
geom_sf(data = dat.sites, color = "grey50", fill = "mediumpurple4", alpha=0.6) +
theme(axis.text.y = element_text(angle = 90, hjust = 0.5)) +
theme_bw() +
xlab("Longitude") +
ylab("Latitude")+
coord_sf() +
theme(plot.background = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(0, 0, 0 ,0), "mm"))
Putah_Map2 <- ggplot(Putah_Map)
+
geom_sf(data = dat.sites, color = "grey50", fill = "mediumpurple4", alpha=0.6)
#load packages
library(mapview)
library(here)
library(dplyr)
library(raster)
library(viridisLite)
library(viridis)
library(ggplot2)
library(mapview)
library(sf)
library(USAboundaries)
library(GSODR)
library(rnaturalearth)
# dataframe with locations
dat.sites <- data.frame(y = c(38.494, 38.526, 38.537, 38.527, 38.517, 38.518),
# latitude
x = c(-122.002, -121.953, -121.85, -121.803, -121.755, -121.696),                                  #longitude
Type= c("Site A","Site B","Site C","Site D", "Site E", "Site F"))
# check data points look right; 'color' in aesthetics argument below is the grouping variable you want to define the point colors
ggplot(data=dat.sites, aes(x=x, y=y)) +
geom_point(size=4)
# coordinates of map
mean.x = mean(dat.sites$x)
mean.y = mean(dat.sites$y)
left = min(dat.sites$x - 0.005)
right = max(dat.sites$x + 0.005)
top = max(dat.sites$y + 0.005)
bottom = min(dat.sites$y - 0.005)
Putah_Map <- st_as_sf(x = dat.sites,
coords = c("x","y"),
crs = "+proj=longlat +datum=WGS84")
mapview(dat.sites)
mapview(dat.sites)
mapview(Putah_Map)
# using origial vignette, lets make it prettier
mapview(Putah_Map, zcol="Sites", legend=TRUE)
library(ggplot2)
install.packages("mapview")
install.packages("mapview")
# dataframe with locations and groups (ie: years, reaches, or whatever you want)
dat.recs = data.frame( y = c(38.5322, 38.5375, 38.5379, 38.5264),  # latitude
x = c(-121.9346, -121.8676, -121.8687, -121.8104),  # longitude
type =c("Lotek","Lotek","ATS","Lotek"))
# check data points look right; 'color' in aesthetics argument below is the grouping variable you want to define the point colors
ggplot(data=dat.recs, aes(x=x, y=y, color=type)) + geom_point(size=4)
# coordinates of map; either by centroid (google), or by bounding box
mean.x = mean(dat.recs$x)
mean.y = mean(dat.recs$y)
left = min(dat.recs$x - 0.005)
right = max(dat.recs$x + 0.005)
top = max(dat.recs$y + 0.005)
bottom = min(dat.recs$y - 0.005)
# vignette example uses a built in dtaframe called 'breweries' - start by looking at this object:
head(breweries)
library(sf)
fakedata = st_as_sf(x = dat.recs,
coords = c("x","y"),
crs = "+proj=longlat +datum=WGS84") # this is a good, universal, common coordinate system
# and now check it out!
mapview(fakedata)
# using origial vignette, lets make it prettier
mapview(fakedata, zcol="type", legend=TRUE)
View(fakedata)
# using origial vignette, lets make it prettier
mapview(Putah_Map, zcol="Type", legend=TRUE)
# and now check it out!
mapview(fakedata)
library(ggplot2)
library(mapview)
# dataframe with locations and groups (ie: years, reaches, or whatever you want)
dat.recs = data.frame( y = c(38.5322, 38.5375, 38.5379, 38.5264),  # latitude
x = c(-121.9346, -121.8676, -121.8687, -121.8104),  # longitude
type =c("Lotek","Lotek","ATS","Lotek"))
# check data points look right; 'color' in aesthetics argument below is the grouping variable you want to define the point colors
ggplot(data=dat.recs, aes(x=x, y=y, color=type)) + geom_point(size=4)
# coordinates of map; either by centroid (google), or by bounding box
mean.x = mean(dat.recs$x)
mean.y = mean(dat.recs$y)
left = min(dat.recs$x - 0.005)
right = max(dat.recs$x + 0.005)
top = max(dat.recs$y + 0.005)
bottom = min(dat.recs$y - 0.005)
library(sf)
fakedata = st_as_sf(x = dat.recs,
coords = c("x","y"),
crs = "+proj=longlat +datum=WGS84") # this is a good, universal, common coordinate system
# and now check it out!
mapview(fakedata)
install.packages(c("mapview", "sf"))
install.packages(c("mapview", "sf"))
library(ggplot2)
install.packages("mapview")
# dataframe with locations and groups (ie: years, reaches, or whatever you want)
dat.recs = data.frame( y = c(38.5322, 38.5375, 38.5379, 38.5264),  # latitude
x = c(-121.9346, -121.8676, -121.8687, -121.8104),  # longitude
type =c("Lotek","Lotek","ATS","Lotek"))
# check data points look right; 'color' in aesthetics argument below is the grouping variable you want to define the point colors
ggplot(data=dat.recs, aes(x=x, y=y, color=type)) + geom_point(size=4)
# coordinates of map; either by centroid (google), or by bounding box
mean.x = mean(dat.recs$x)
mean.y = mean(dat.recs$y)
left = min(dat.recs$x - 0.005)
right = max(dat.recs$x + 0.005)
top = max(dat.recs$y + 0.005)
bottom = min(dat.recs$y - 0.005)
# vignette example uses a built in dtaframe called 'breweries' - start by looking at this object:
head(breweries)
library(sf)
fakedata = st_as_sf(x = dat.recs,
coords = c("x","y"),
crs = "+proj=longlat +datum=WGS84") # this is a good, universal, common coordinate system
# and now check it out!
mapview(fakedata)
# using origial vignette, lets make it prettier
mapview(fakedata, zcol="type", legend=TRUE)
# and now check it out!
mapview(fakedata)
# using origial vignette, lets make it prettier
mapview(fakedata, zcol="type", legend=TRUE)
#load packages
library(mapview)
library(here)
library(dplyr)
library(raster)
library(viridisLite)
library(viridis)
library(ggplot2)
library(mapview)
library(sf)
library(USAboundaries)
library(GSODR)
library(rnaturalearth)
# dataframe with locations
dat.sites = data.frame(y = c(38.494, 38.526, 38.537, 38.527, 38.517, 38.518),
# latitude
x = c(-122.002, -121.953, -121.85, -121.803, -121.755, -121.696),                                  #longitude
Type= c("Site A","Site B","Site C","Site D", "Site E", "Site F"))
# check data points look right; 'color' in aesthetics argument below is the grouping variable you want to define the point colors
ggplot(data=dat.sites, aes(x=x, y=y)) +
geom_point(size=4)
# coordinates of map
mean.x = mean(dat.sites$x)
mean.y = mean(dat.sites$y)
left = min(dat.sites$x - 0.005)
right = max(dat.sites$x + 0.005)
top = max(dat.sites$y + 0.005)
bottom = min(dat.sites$y - 0.005)
Putah_Map <- st_as_sf(x = dat.sites,
coords = c("x","y"),
crs = "+proj=longlat +datum=WGS84")
mapview(Putah_Map)
# using origial vignette, lets make it prettier
mapview(Putah_Map, zcol="Type", legend=TRUE)
update.packages(checkBuilt=TRUE, ask=FALSE)
#load packages
library(mapview)
library(here)
library(dplyr)
library(raster)
library(viridisLite)
library(viridis)
library(ggplot2)
library(mapview)
library(sf)
library(USAboundaries)
library(GSODR)
library(rnaturalearth)
# dataframe with locations
dat.sites = data.frame(y = c(38.494, 38.526, 38.537, 38.527, 38.517, 38.518),
# latitude
x = c(-122.002, -121.953, -121.85, -121.803, -121.755, -121.696),                                  #longitude
Type= c("Site A","Site B","Site C","Site D", "Site E", "Site F"))
# check data points look right; 'color' in aesthetics argument below is the grouping variable you want to define the point colors
ggplot(data=dat.sites, aes(x=x, y=y)) +
geom_point(size=4)
# coordinates of map
mean.x = mean(dat.sites$x)
mean.y = mean(dat.sites$y)
left = min(dat.sites$x - 0.005)
right = max(dat.sites$x + 0.005)
top = max(dat.sites$y + 0.005)
bottom = min(dat.sites$y - 0.005)
Putah_Map <- st_as_sf(x = dat.sites,
coords = c("x","y"),
crs = "+proj=longlat +datum=WGS84")
mapview(Putah_Map)
# using origial vignette, lets make it prettier
mapview(Putah_Map, zcol="Type", legend=TRUE)
Putah_Map <- st_as_sf(x = dat.sites,
coords = c("x","y"),
crs = "+proj=longlat +datum=WGS84")
mapview(Putah_Map)
mapviewColors(Putah_Map)
View(Putah_Map)
help("mapview")
mapView(Putah_Map)
library(ggplot2)
library(mapview)
# dataframe with locations and groups (ie: years, reaches, or whatever you want)
dat.recs = data.frame( y = c(38.5322, 38.5375, 38.5379, 38.5264),  # latitude
x = c(-121.9346, -121.8676, -121.8687, -121.8104),  # longitude
type =c("Lotek","Lotek","ATS","Lotek"))
# check data points look right; 'color' in aesthetics argument below is the grouping variable you want to define the point colors
ggplot(data=dat.recs, aes(x=x, y=y, color=type)) + geom_point(size=4)
# coordinates of map; either by centroid (google), or by bounding box
mean.x = mean(dat.recs$x)
mean.y = mean(dat.recs$y)
left = min(dat.recs$x - 0.005)
right = max(dat.recs$x + 0.005)
top = max(dat.recs$y + 0.005)
bottom = min(dat.recs$y - 0.005)
# vignette example uses a built in dtaframe called 'breweries' - start by looking at this object:
head(breweries)
library(sf)
fakedata = st_as_sf(x = dat.recs,
coords = c("x","y"),
crs = "+proj=longlat +datum=WGS84") # this is a good, universal, common coordinate system
# and now check it out!
mapview(fakedata)
# using origial vignette, lets make it prettier
mapview(fakedata, zcol="type", legend=TRUE)
View(dat.recs)
install.packages(rcpp)
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
#load packages
library(mapview)
library(here)
library(dplyr)
library(raster)
library(viridisLite)
library(viridis)
library(ggplot2)
library(mapview)
library(sf)
library(USAboundaries)
library(GSODR)
library(rnaturalearth)
# dataframe with locations
dat.sites = data.frame(y = c(38.494, 38.526, 38.537, 38.527, 38.517, 38.518),
# latitude
x = c(-122.002, -121.953, -121.85, -121.803, -121.755, -121.696),                                  #longitude
Type= c("Site A","Site B","Site C","Site D", "Site E", "Site F"))
# check data points look right; 'color' in aesthetics argument below is the grouping variable you want to define the point colors
ggplot(data=dat.sites, aes(x=x, y=y)) +
geom_point(size=4)
# coordinates of map
mean.x = mean(dat.sites$x)
mean.y = mean(dat.sites$y)
left = min(dat.sites$x - 0.005)
right = max(dat.sites$x + 0.005)
top = max(dat.sites$y + 0.005)
bottom = min(dat.sites$y - 0.005)
Putah_Map <- st_as_sf(x = dat.sites,
coords = c("x","y"),
crs = "+proj=longlat +datum=WGS84")
mapView(Putah_Map)
# using origial vignette, lets make it prettier
mapview(Putah_Map, zcol="Type", legend=TRUE)
install.packages("RMark")
library(RMark)
install.packages(c("dplyr", "ggplot2", "mapview", "raster", "sf", "spData", "tmap"))
install.packages(c("dplyr", "ggplot2", "GSODR", "here", "leafem", "leaflet", "mapview", "raster", "rnaturalearth", "sf", "tidyverse", "USAboundaries", "viridis", "viridisLite"))
ggplot(data = Putah_Map, aes(fill = SID74)) + geom_sf() +
scale_fill_viridis() + theme_bw())
ggplot(data = Putah_Map, aes(fill = SID74)) + geom_sf() +
scale_fill_viridis() + theme_bw()
ggplot(Putah_Map) + geom_sf(aes(fill = SID74)) + theme_bw()
ggplot(Putah_Map) + geom_sf(aes(fill = SID74)) + theme_bw()
library(ggplot2)
# mapping, following directions from Ryan Peak: https://ryanpeek.github.io/mapping-in-R-workshop/
# linked vignette for mapview (simpler than other options): https://r-spatial.github.io/mapview/articles/articles/mapview_01-basics.html
#install.packages("mapview")
#install.packages("viridis")
#install.packages("viridisLite")
#install.packages("here")
#install.packages("sf")
#install.packages("USAboundaries")
#install.packages("ggplot2")
#install.packages("GSODR")
#install.packages("rnaturalearth")
#install.packages("raster")
#install.packages("gdtools")
#install.packages("dplyr")
#install.packages("leaflet")
#install.packages("leafem")
#load packages
library(mapview)
library(here)
library(dplyr)
library(raster)
library(viridisLite)
library(viridis)
library(ggplot2)
library(mapview)
library(sf)
library(USAboundaries)
library(GSODR)
library(rnaturalearth)
library(leaflet)
library(tidyverse)
library(leafem)
library(ggplot2)
# dataframe with locations
dat.sites = data.frame(y = c(38.494, 38.526, 38.537, 38.527, 38.517, 38.518),
# latitude
x = c(-122.002, -121.953, -121.85, -121.803, -121.755, -121.696),                                  #longitude
Sites= c("Site A","Site B","Site C","Site D", "Site E", "Site F"))
# read in dataframe if many points
# check data points look right; 'color' in aesthetics argument below is the grouping variable you want to define the point colors
ggplot(data=dat.sites, aes(x=x, y=y)) +
geom_point(size=4)
# coordinates of map
#mean.x = mean(dat.sites$x)
#mean.y = mean(dat.sites$y)
# left = min(dat.sites$x - 0.005)
#right = max(dat.sites$x + 0.005)
#top = max(dat.sites$y + 0.005)
#bottom = min(dat.sites$y - 0.005)
# it's an 'sf' object - like a dataframe but with different attributes specific to spatial data
# so lets make our own data into an sf object first
Putah_Map <- st_as_sf(x = dat.sites,
coords = c("x","y"),
crs = "+proj=longlat +datum=WGS84")
#this is a good, universal, common coordinate system
mapview(Putah_Map)
# using origial vignette, lets make it prettier
mapview(Putah_Map, zcol="Sites", legend=TRUE, layer.name="Putah Creek")
Putah <- mapview(Putah_Map, legend=FALSE, cex=5, alpha= .4, col.region="grey40") %>%
addStaticLabels(label = Putah_Map$Sites, noHide=TRUE,direction='top',offset=c(0,12),textOnly=TRUE, textsize='20px',permanent=TRUE, viewer.suppress=FALSE)
Putah
show(Putah)
ggplot(Putah_Map) + geom_sf(aes(fill = SID74)) + theme_bw()
library(viridis)
ggplot(Putah_Map) + geom_sf(aes(fill = SID74)) + theme_bw()
ggplot(Putah_Map) + geom_sf(aes(fill = Putah_Map)) + theme_bw()
ggplot(Putah_Map) + geom_sf(aes(fill = Putah_Map)) + theme_bw()
library(tmap)
ggplot(Putah_Map) + geom_sf(aes(fill = Putah_Map)) + theme_bw()
mapview(Putah_Map,
zcol = "SID74",
map.types = "CartoDB.DarkMatter",
col.regions = pal
)
mapview(Putah_Map,
zcol = "SID74",
map.types = "CartoDB.DarkMatter")
mapview(Putah_Map,
zcol = "Sites",
map.types = "CartoDB.DarkMatter")
tmap_mode("view")
tm_shape(Putah_Map)
Putah <- mapview(Putah_Map, legend=FALSE, cex=5, alpha= .4, col.region="grey40") %>%
addStaticLabels(label = Putah_Map$Sites, noHide=TRUE,direction='top',offset=c(0,12),textOnly=TRUE, textsize='20px',permanent=TRUE, viewer.suppress=FALSE)
Putah
saveWidget(Putah)
webshot(Putah)
install.packages(htmlwidgets)
mapshot(Putah)
?mapshot()
mapshot(Putah,PUTAHMAP.PDF)
mapshot(Putah,file=PUTAHMAP.pdf,remove_url=TRUE)
mapshot(Putah,file=PUTAHMAP,remove_url=TRUE)
mapshot(Putah,file=.pdf,remove_url=TRUE)
mapshot(Putah,file = paste0(getwd(), "/map.png",remove_url=TRUE)
Putah <- mapview(Putah_Map, legend=FALSE, cex=5, alpha= .4, col.region="grey40") %>%
addStaticLabels(label = Putah_Map$Sites, noHide=TRUE,direction='top',offset=c(0,12),textOnly=TRUE, textsize='20px',permanent=TRUE, viewer.suppress=FALSE)
Putah
Putah <- mapview(Putah_Map, legend=FALSE, cex=4, alpha= .4, col.region="grey40") %>%
addStaticLabels(label = Putah_Map$Sites, noHide=TRUE,direction='top',offset=c(0,12),textOnly=TRUE, textsize='20px',permanent=TRUE, viewer.suppress=FALSE)
Putah
?mapview()
Putah <- mapview(Putah_Map, legend=FALSE, cex=4, alpha= .4, col.region="grey40") %>%
addStaticLabels(label = Putah_Map$Sites, noHide=TRUE,direction='top',offset=c(0,12),textOnly=TRUE, textsize='20px',permanent=TRUE, viewer.suppress=FALSE, verbose = mapviewGetOption("verbose"))
Putah
Putah <- mapview(Putah_Map, legend=FALSE, cex=4, alpha= .4, col.region="grey40") %>%
addStaticLabels(label = Putah_Map$Sites, noHide=TRUE,direction='top',offset=c(0,12),textOnly=TRUE, textsize='20px',permanent=TRUE, viewer.suppress=FALSE, verbose = mapviewGetOption("verbose"))
Putah
citation()
citation(package = "vegan")
citation(package = "lmer")
citation(package = "lme4")
citation(package = "codyn")
Flow <- read_csv("Flow_AllSites_2.csv")
Flow2 <- read_csv("Flow_From_dam_78-17.csv")
Flow2 <- read_csv("Flow_From_dam_78-17.csv")
setwd("~/Desktop/R_DAVIS_2020/r-davis-in-class-project-emjacinto/PutahData")
library(tidyverse)
library(ggplot2)
library(dplyr)
library(lubridate)
library(plot3D)
options(stringsAsFactors = FALSE)
Flow <- read_csv("Flow_AllSites_2.csv")
Flow2 <- read_csv("Flow_From_dam_78-17.csv")
View(Flow2)
